// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: blockchain_rpc.proto

#include "blockchain_rpc.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace core {
class GetBlockRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockRequest>
      _instance;
} _GetBlockRequest_default_instance_;
class GetBlockchainInfoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockchainInfoRequest>
      _instance;
} _GetBlockchainInfoRequest_default_instance_;
class GetBlockCountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockCountRequest>
      _instance;
} _GetBlockCountRequest_default_instance_;
class GetRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRawTransactionRequest>
      _instance;
} _GetRawTransactionRequest_default_instance_;
class SendRawTransactionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendRawTransactionRequest>
      _instance;
} _SendRawTransactionRequest_default_instance_;
class GetBlockResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockResponse>
      _instance;
} _GetBlockResponse_default_instance_;
class GetBlockchainInfoResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockchainInfoResponse>
      _instance;
} _GetBlockchainInfoResponse_default_instance_;
class GetBlockCountResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetBlockCountResponse>
      _instance;
} _GetBlockCountResponse_default_instance_;
class GetRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetRawTransactionResponse>
      _instance;
} _GetRawTransactionResponse_default_instance_;
class SendRawTransactionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SendRawTransactionResponse>
      _instance;
} _SendRawTransactionResponse_default_instance_;
}  // namespace core
namespace protobuf_blockchain_5frpc_2eproto {
static void InitDefaultsGetBlockRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetBlockRequest_default_instance_;
    new (ptr) ::core::GetBlockRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetBlockRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBlockRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBlockRequest}, {}};

static void InitDefaultsGetBlockchainInfoRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetBlockchainInfoRequest_default_instance_;
    new (ptr) ::core::GetBlockchainInfoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetBlockchainInfoRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBlockchainInfoRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBlockchainInfoRequest}, {}};

static void InitDefaultsGetBlockCountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetBlockCountRequest_default_instance_;
    new (ptr) ::core::GetBlockCountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetBlockCountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBlockCountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBlockCountRequest}, {}};

static void InitDefaultsGetRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetRawTransactionRequest_default_instance_;
    new (ptr) ::core::GetRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRawTransactionRequest}, {}};

static void InitDefaultsSendRawTransactionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_SendRawTransactionRequest_default_instance_;
    new (ptr) ::core::SendRawTransactionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::SendRawTransactionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendRawTransactionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendRawTransactionRequest}, {}};

static void InitDefaultsGetBlockResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetBlockResponse_default_instance_;
    new (ptr) ::core::GetBlockResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetBlockResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBlockResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBlockResponse}, {}};

static void InitDefaultsGetBlockchainInfoResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetBlockchainInfoResponse_default_instance_;
    new (ptr) ::core::GetBlockchainInfoResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetBlockchainInfoResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBlockchainInfoResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBlockchainInfoResponse}, {}};

static void InitDefaultsGetBlockCountResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetBlockCountResponse_default_instance_;
    new (ptr) ::core::GetBlockCountResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetBlockCountResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetBlockCountResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetBlockCountResponse}, {}};

static void InitDefaultsGetRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_GetRawTransactionResponse_default_instance_;
    new (ptr) ::core::GetRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::GetRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetRawTransactionResponse}, {}};

static void InitDefaultsSendRawTransactionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::core::_SendRawTransactionResponse_default_instance_;
    new (ptr) ::core::SendRawTransactionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::core::SendRawTransactionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SendRawTransactionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSendRawTransactionResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetBlockRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBlockchainInfoRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBlockCountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendRawTransactionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBlockResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBlockchainInfoResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetBlockCountResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GetRawTransactionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SendRawTransactionResponse.base);
}

::google::protobuf::Metadata file_level_metadata[10];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockRequest, block_height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockchainInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockCountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetRawTransactionRequest, txid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::SendRawTransactionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::SendRawTransactionRequest, raw_transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockResponse, block_data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockchainInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockchainInfoResponse, chain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockchainInfoResponse, block_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockCountResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetBlockCountResponse, block_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::GetRawTransactionResponse, raw_transaction_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::SendRawTransactionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::core::SendRawTransactionResponse, success_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::core::GetBlockRequest)},
  { 6, -1, sizeof(::core::GetBlockchainInfoRequest)},
  { 11, -1, sizeof(::core::GetBlockCountRequest)},
  { 16, -1, sizeof(::core::GetRawTransactionRequest)},
  { 22, -1, sizeof(::core::SendRawTransactionRequest)},
  { 28, -1, sizeof(::core::GetBlockResponse)},
  { 34, -1, sizeof(::core::GetBlockchainInfoResponse)},
  { 41, -1, sizeof(::core::GetBlockCountResponse)},
  { 47, -1, sizeof(::core::GetRawTransactionResponse)},
  { 53, -1, sizeof(::core::SendRawTransactionResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetBlockRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetBlockchainInfoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetBlockCountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_SendRawTransactionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetBlockResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetBlockchainInfoResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetBlockCountResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_GetRawTransactionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::core::_SendRawTransactionResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "blockchain_rpc.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024blockchain_rpc.proto\022\004core\"\'\n\017GetBlock"
      "Request\022\024\n\014block_height\030\001 \001(\005\"\032\n\030GetBloc"
      "kchainInfoRequest\"\026\n\024GetBlockCountReques"
      "t\"(\n\030GetRawTransactionRequest\022\014\n\004txid\030\001 "
      "\001(\t\"4\n\031SendRawTransactionRequest\022\027\n\017raw_"
      "transaction\030\001 \001(\t\"&\n\020GetBlockResponse\022\022\n"
      "\nblock_data\030\001 \001(\t\"B\n\031GetBlockchainInfoRe"
      "sponse\022\020\n\010chain_id\030\001 \001(\t\022\023\n\013block_count\030"
      "\002 \001(\005\",\n\025GetBlockCountResponse\022\023\n\013block_"
      "count\030\001 \001(\005\"4\n\031GetRawTransactionResponse"
      "\022\027\n\017raw_transaction\030\001 \001(\t\"-\n\032SendRawTran"
      "sactionResponse\022\017\n\007success\030\001 \001(\010*}\n\013Mess"
      "ageType\022\r\n\tGET_BLOCK\020\000\022\027\n\023GET_BLOCKCHAIN"
      "_INFO\020\001\022\023\n\017GET_BLOCK_COUNT\020\002\022\027\n\023GET_RAW_"
      "TRANSACTION\020\003\022\030\n\024SEND_RAW_TRANSACTION\020\0042"
      "\235\003\n\021BlockchainService\0229\n\010GetBlock\022\025.core"
      ".GetBlockRequest\032\026.core.GetBlockResponse"
      "\022T\n\021GetBlockchainINfo\022\036.core.GetBlockcha"
      "inInfoRequest\032\037.core.GetBlockchainInfoRe"
      "sponse\022H\n\rGetBlockCount\022\032.core.GetBlockC"
      "ountRequest\032\033.core.GetBlockCountResponse"
      "\022T\n\021GetRawTransaction\022\036.core.GetRawTrans"
      "actionRequest\032\037.core.GetRawTransactionRe"
      "sponse\022W\n\022SendRawTransaction\022\037.core.Send"
      "RawTransactionRequest\032 .core.SendRawTran"
      "sactionResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1023);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "blockchain_rpc.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_blockchain_5frpc_2eproto
namespace core {
const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_blockchain_5frpc_2eproto::file_level_enum_descriptors[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GetBlockRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockRequest::kBlockHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockRequest::GetBlockRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetBlockRequest)
}
GetBlockRequest::GetBlockRequest(const GetBlockRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_height_ = from.block_height_;
  // @@protoc_insertion_point(copy_constructor:core.GetBlockRequest)
}

void GetBlockRequest::SharedCtor() {
  block_height_ = 0;
}

GetBlockRequest::~GetBlockRequest() {
  // @@protoc_insertion_point(destructor:core.GetBlockRequest)
  SharedDtor();
}

void GetBlockRequest::SharedDtor() {
}

void GetBlockRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBlockRequest::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockRequest& GetBlockRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockRequest.base);
  return *internal_default_instance();
}


void GetBlockRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetBlockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_height_ = 0;
  _internal_metadata_.Clear();
}

bool GetBlockRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetBlockRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 block_height = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetBlockRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetBlockRequest)
  return false;
#undef DO_
}

void GetBlockRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetBlockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 block_height = 1;
  if (this->block_height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->block_height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetBlockRequest)
}

::google::protobuf::uint8* GetBlockRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetBlockRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 block_height = 1;
  if (this->block_height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->block_height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetBlockRequest)
  return target;
}

size_t GetBlockRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetBlockRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 block_height = 1;
  if (this->block_height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->block_height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetBlockRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetBlockRequest)
    MergeFrom(*source);
  }
}

void GetBlockRequest::MergeFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetBlockRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.block_height() != 0) {
    set_block_height(from.block_height());
  }
}

void GetBlockRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockRequest::CopyFrom(const GetBlockRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetBlockRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockRequest::IsInitialized() const {
  return true;
}

void GetBlockRequest::Swap(GetBlockRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockRequest::InternalSwap(GetBlockRequest* other) {
  using std::swap;
  swap(block_height_, other->block_height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBlockRequest::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockchainInfoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockchainInfoRequest::GetBlockchainInfoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockchainInfoRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetBlockchainInfoRequest)
}
GetBlockchainInfoRequest::GetBlockchainInfoRequest(const GetBlockchainInfoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:core.GetBlockchainInfoRequest)
}

void GetBlockchainInfoRequest::SharedCtor() {
}

GetBlockchainInfoRequest::~GetBlockchainInfoRequest() {
  // @@protoc_insertion_point(destructor:core.GetBlockchainInfoRequest)
  SharedDtor();
}

void GetBlockchainInfoRequest::SharedDtor() {
}

void GetBlockchainInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBlockchainInfoRequest::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockchainInfoRequest& GetBlockchainInfoRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockchainInfoRequest.base);
  return *internal_default_instance();
}


void GetBlockchainInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetBlockchainInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetBlockchainInfoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetBlockchainInfoRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetBlockchainInfoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetBlockchainInfoRequest)
  return false;
#undef DO_
}

void GetBlockchainInfoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetBlockchainInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetBlockchainInfoRequest)
}

::google::protobuf::uint8* GetBlockchainInfoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetBlockchainInfoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetBlockchainInfoRequest)
  return target;
}

size_t GetBlockchainInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetBlockchainInfoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockchainInfoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetBlockchainInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockchainInfoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockchainInfoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetBlockchainInfoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetBlockchainInfoRequest)
    MergeFrom(*source);
  }
}

void GetBlockchainInfoRequest::MergeFrom(const GetBlockchainInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetBlockchainInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetBlockchainInfoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetBlockchainInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockchainInfoRequest::CopyFrom(const GetBlockchainInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetBlockchainInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockchainInfoRequest::IsInitialized() const {
  return true;
}

void GetBlockchainInfoRequest::Swap(GetBlockchainInfoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockchainInfoRequest::InternalSwap(GetBlockchainInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBlockchainInfoRequest::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockCountRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockCountRequest::GetBlockCountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockCountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetBlockCountRequest)
}
GetBlockCountRequest::GetBlockCountRequest(const GetBlockCountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:core.GetBlockCountRequest)
}

void GetBlockCountRequest::SharedCtor() {
}

GetBlockCountRequest::~GetBlockCountRequest() {
  // @@protoc_insertion_point(destructor:core.GetBlockCountRequest)
  SharedDtor();
}

void GetBlockCountRequest::SharedDtor() {
}

void GetBlockCountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBlockCountRequest::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockCountRequest& GetBlockCountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockCountRequest.base);
  return *internal_default_instance();
}


void GetBlockCountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetBlockCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool GetBlockCountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetBlockCountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetBlockCountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetBlockCountRequest)
  return false;
#undef DO_
}

void GetBlockCountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetBlockCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetBlockCountRequest)
}

::google::protobuf::uint8* GetBlockCountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetBlockCountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetBlockCountRequest)
  return target;
}

size_t GetBlockCountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetBlockCountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockCountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetBlockCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockCountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockCountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetBlockCountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetBlockCountRequest)
    MergeFrom(*source);
  }
}

void GetBlockCountRequest::MergeFrom(const GetBlockCountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetBlockCountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetBlockCountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetBlockCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockCountRequest::CopyFrom(const GetBlockCountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetBlockCountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockCountRequest::IsInitialized() const {
  return true;
}

void GetBlockCountRequest::Swap(GetBlockCountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockCountRequest::InternalSwap(GetBlockCountRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBlockCountRequest::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRawTransactionRequest::kTxidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRawTransactionRequest::GetRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetRawTransactionRequest)
}
GetRawTransactionRequest::GetRawTransactionRequest(const GetRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  txid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txid().size() > 0) {
    txid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txid_);
  }
  // @@protoc_insertion_point(copy_constructor:core.GetRawTransactionRequest)
}

void GetRawTransactionRequest::SharedCtor() {
  txid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRawTransactionRequest::~GetRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:core.GetRawTransactionRequest)
  SharedDtor();
}

void GetRawTransactionRequest::SharedDtor() {
  txid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRawTransactionRequest::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRawTransactionRequest& GetRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetRawTransactionRequest.base);
  return *internal_default_instance();
}


void GetRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  txid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string txid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_txid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->txid().data(), static_cast<int>(this->txid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "core.GetRawTransactionRequest.txid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetRawTransactionRequest)
  return false;
#undef DO_
}

void GetRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string txid = 1;
  if (this->txid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txid().data(), static_cast<int>(this->txid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetRawTransactionRequest.txid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->txid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetRawTransactionRequest)
}

::google::protobuf::uint8* GetRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string txid = 1;
  if (this->txid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->txid().data(), static_cast<int>(this->txid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetRawTransactionRequest.txid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->txid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetRawTransactionRequest)
  return target;
}

size_t GetRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string txid = 1;
  if (this->txid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->txid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetRawTransactionRequest)
    MergeFrom(*source);
  }
}

void GetRawTransactionRequest::MergeFrom(const GetRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.txid().size() > 0) {

    txid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txid_);
  }
}

void GetRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRawTransactionRequest::CopyFrom(const GetRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRawTransactionRequest::IsInitialized() const {
  return true;
}

void GetRawTransactionRequest::Swap(GetRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRawTransactionRequest::InternalSwap(GetRawTransactionRequest* other) {
  using std::swap;
  txid_.Swap(&other->txid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRawTransactionRequest::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendRawTransactionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendRawTransactionRequest::kRawTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendRawTransactionRequest::SendRawTransactionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_SendRawTransactionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.SendRawTransactionRequest)
}
SendRawTransactionRequest::SendRawTransactionRequest(const SendRawTransactionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw_transaction().size() > 0) {
    raw_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:core.SendRawTransactionRequest)
}

void SendRawTransactionRequest::SharedCtor() {
  raw_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SendRawTransactionRequest::~SendRawTransactionRequest() {
  // @@protoc_insertion_point(destructor:core.SendRawTransactionRequest)
  SharedDtor();
}

void SendRawTransactionRequest::SharedDtor() {
  raw_transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SendRawTransactionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendRawTransactionRequest::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendRawTransactionRequest& SendRawTransactionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_SendRawTransactionRequest.base);
  return *internal_default_instance();
}


void SendRawTransactionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:core.SendRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SendRawTransactionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.SendRawTransactionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string raw_transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_transaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->raw_transaction().data(), static_cast<int>(this->raw_transaction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "core.SendRawTransactionRequest.raw_transaction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.SendRawTransactionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.SendRawTransactionRequest)
  return false;
#undef DO_
}

void SendRawTransactionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.SendRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string raw_transaction = 1;
  if (this->raw_transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->raw_transaction().data(), static_cast<int>(this->raw_transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.SendRawTransactionRequest.raw_transaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->raw_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.SendRawTransactionRequest)
}

::google::protobuf::uint8* SendRawTransactionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.SendRawTransactionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string raw_transaction = 1;
  if (this->raw_transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->raw_transaction().data(), static_cast<int>(this->raw_transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.SendRawTransactionRequest.raw_transaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->raw_transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.SendRawTransactionRequest)
  return target;
}

size_t SendRawTransactionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.SendRawTransactionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string raw_transaction = 1;
  if (this->raw_transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raw_transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendRawTransactionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.SendRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SendRawTransactionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendRawTransactionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.SendRawTransactionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.SendRawTransactionRequest)
    MergeFrom(*source);
  }
}

void SendRawTransactionRequest::MergeFrom(const SendRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.SendRawTransactionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.raw_transaction().size() > 0) {

    raw_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_transaction_);
  }
}

void SendRawTransactionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.SendRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendRawTransactionRequest::CopyFrom(const SendRawTransactionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.SendRawTransactionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRawTransactionRequest::IsInitialized() const {
  return true;
}

void SendRawTransactionRequest::Swap(SendRawTransactionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendRawTransactionRequest::InternalSwap(SendRawTransactionRequest* other) {
  using std::swap;
  raw_transaction_.Swap(&other->raw_transaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendRawTransactionRequest::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockResponse::kBlockDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockResponse::GetBlockResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetBlockResponse)
}
GetBlockResponse::GetBlockResponse(const GetBlockResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.block_data().size() > 0) {
    block_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_data_);
  }
  // @@protoc_insertion_point(copy_constructor:core.GetBlockResponse)
}

void GetBlockResponse::SharedCtor() {
  block_data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetBlockResponse::~GetBlockResponse() {
  // @@protoc_insertion_point(destructor:core.GetBlockResponse)
  SharedDtor();
}

void GetBlockResponse::SharedDtor() {
  block_data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBlockResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBlockResponse::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockResponse& GetBlockResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockResponse.base);
  return *internal_default_instance();
}


void GetBlockResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetBlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetBlockResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetBlockResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string block_data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_block_data()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->block_data().data(), static_cast<int>(this->block_data().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "core.GetBlockResponse.block_data"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetBlockResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetBlockResponse)
  return false;
#undef DO_
}

void GetBlockResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetBlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string block_data = 1;
  if (this->block_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->block_data().data(), static_cast<int>(this->block_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetBlockResponse.block_data");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->block_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetBlockResponse)
}

::google::protobuf::uint8* GetBlockResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetBlockResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string block_data = 1;
  if (this->block_data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->block_data().data(), static_cast<int>(this->block_data().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetBlockResponse.block_data");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->block_data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetBlockResponse)
  return target;
}

size_t GetBlockResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetBlockResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string block_data = 1;
  if (this->block_data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->block_data());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetBlockResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetBlockResponse)
    MergeFrom(*source);
  }
}

void GetBlockResponse::MergeFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetBlockResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.block_data().size() > 0) {

    block_data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_data_);
  }
}

void GetBlockResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockResponse::CopyFrom(const GetBlockResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetBlockResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockResponse::IsInitialized() const {
  return true;
}

void GetBlockResponse::Swap(GetBlockResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockResponse::InternalSwap(GetBlockResponse* other) {
  using std::swap;
  block_data_.Swap(&other->block_data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBlockResponse::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockchainInfoResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockchainInfoResponse::kChainIdFieldNumber;
const int GetBlockchainInfoResponse::kBlockCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockchainInfoResponse::GetBlockchainInfoResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockchainInfoResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetBlockchainInfoResponse)
}
GetBlockchainInfoResponse::GetBlockchainInfoResponse(const GetBlockchainInfoResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chain_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.chain_id().size() > 0) {
    chain_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_id_);
  }
  block_count_ = from.block_count_;
  // @@protoc_insertion_point(copy_constructor:core.GetBlockchainInfoResponse)
}

void GetBlockchainInfoResponse::SharedCtor() {
  chain_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_count_ = 0;
}

GetBlockchainInfoResponse::~GetBlockchainInfoResponse() {
  // @@protoc_insertion_point(destructor:core.GetBlockchainInfoResponse)
  SharedDtor();
}

void GetBlockchainInfoResponse::SharedDtor() {
  chain_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetBlockchainInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBlockchainInfoResponse::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockchainInfoResponse& GetBlockchainInfoResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockchainInfoResponse.base);
  return *internal_default_instance();
}


void GetBlockchainInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetBlockchainInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chain_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  block_count_ = 0;
  _internal_metadata_.Clear();
}

bool GetBlockchainInfoResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetBlockchainInfoResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string chain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_chain_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->chain_id().data(), static_cast<int>(this->chain_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "core.GetBlockchainInfoResponse.chain_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 block_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetBlockchainInfoResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetBlockchainInfoResponse)
  return false;
#undef DO_
}

void GetBlockchainInfoResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetBlockchainInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chain_id = 1;
  if (this->chain_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_id().data(), static_cast<int>(this->chain_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetBlockchainInfoResponse.chain_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->chain_id(), output);
  }

  // int32 block_count = 2;
  if (this->block_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->block_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetBlockchainInfoResponse)
}

::google::protobuf::uint8* GetBlockchainInfoResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetBlockchainInfoResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string chain_id = 1;
  if (this->chain_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->chain_id().data(), static_cast<int>(this->chain_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetBlockchainInfoResponse.chain_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->chain_id(), target);
  }

  // int32 block_count = 2;
  if (this->block_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->block_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetBlockchainInfoResponse)
  return target;
}

size_t GetBlockchainInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetBlockchainInfoResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string chain_id = 1;
  if (this->chain_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->chain_id());
  }

  // int32 block_count = 2;
  if (this->block_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->block_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockchainInfoResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetBlockchainInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockchainInfoResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockchainInfoResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetBlockchainInfoResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetBlockchainInfoResponse)
    MergeFrom(*source);
  }
}

void GetBlockchainInfoResponse::MergeFrom(const GetBlockchainInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetBlockchainInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chain_id().size() > 0) {

    chain_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.chain_id_);
  }
  if (from.block_count() != 0) {
    set_block_count(from.block_count());
  }
}

void GetBlockchainInfoResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetBlockchainInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockchainInfoResponse::CopyFrom(const GetBlockchainInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetBlockchainInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockchainInfoResponse::IsInitialized() const {
  return true;
}

void GetBlockchainInfoResponse::Swap(GetBlockchainInfoResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockchainInfoResponse::InternalSwap(GetBlockchainInfoResponse* other) {
  using std::swap;
  chain_id_.Swap(&other->chain_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(block_count_, other->block_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBlockchainInfoResponse::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetBlockCountResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetBlockCountResponse::kBlockCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetBlockCountResponse::GetBlockCountResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockCountResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetBlockCountResponse)
}
GetBlockCountResponse::GetBlockCountResponse(const GetBlockCountResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_count_ = from.block_count_;
  // @@protoc_insertion_point(copy_constructor:core.GetBlockCountResponse)
}

void GetBlockCountResponse::SharedCtor() {
  block_count_ = 0;
}

GetBlockCountResponse::~GetBlockCountResponse() {
  // @@protoc_insertion_point(destructor:core.GetBlockCountResponse)
  SharedDtor();
}

void GetBlockCountResponse::SharedDtor() {
}

void GetBlockCountResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetBlockCountResponse::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetBlockCountResponse& GetBlockCountResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetBlockCountResponse.base);
  return *internal_default_instance();
}


void GetBlockCountResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetBlockCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_count_ = 0;
  _internal_metadata_.Clear();
}

bool GetBlockCountResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetBlockCountResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 block_count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetBlockCountResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetBlockCountResponse)
  return false;
#undef DO_
}

void GetBlockCountResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetBlockCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 block_count = 1;
  if (this->block_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->block_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetBlockCountResponse)
}

::google::protobuf::uint8* GetBlockCountResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetBlockCountResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 block_count = 1;
  if (this->block_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->block_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetBlockCountResponse)
  return target;
}

size_t GetBlockCountResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetBlockCountResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 block_count = 1;
  if (this->block_count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->block_count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetBlockCountResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetBlockCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetBlockCountResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetBlockCountResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetBlockCountResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetBlockCountResponse)
    MergeFrom(*source);
  }
}

void GetBlockCountResponse::MergeFrom(const GetBlockCountResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetBlockCountResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.block_count() != 0) {
    set_block_count(from.block_count());
  }
}

void GetBlockCountResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetBlockCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetBlockCountResponse::CopyFrom(const GetBlockCountResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetBlockCountResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetBlockCountResponse::IsInitialized() const {
  return true;
}

void GetBlockCountResponse::Swap(GetBlockCountResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetBlockCountResponse::InternalSwap(GetBlockCountResponse* other) {
  using std::swap;
  swap(block_count_, other->block_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetBlockCountResponse::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GetRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetRawTransactionResponse::kRawTransactionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetRawTransactionResponse::GetRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_GetRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.GetRawTransactionResponse)
}
GetRawTransactionResponse::GetRawTransactionResponse(const GetRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  raw_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.raw_transaction().size() > 0) {
    raw_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_transaction_);
  }
  // @@protoc_insertion_point(copy_constructor:core.GetRawTransactionResponse)
}

void GetRawTransactionResponse::SharedCtor() {
  raw_transaction_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetRawTransactionResponse::~GetRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:core.GetRawTransactionResponse)
  SharedDtor();
}

void GetRawTransactionResponse::SharedDtor() {
  raw_transaction_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetRawTransactionResponse::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetRawTransactionResponse& GetRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_GetRawTransactionResponse.base);
  return *internal_default_instance();
}


void GetRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:core.GetRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  raw_transaction_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.GetRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string raw_transaction = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_raw_transaction()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->raw_transaction().data(), static_cast<int>(this->raw_transaction().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "core.GetRawTransactionResponse.raw_transaction"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.GetRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.GetRawTransactionResponse)
  return false;
#undef DO_
}

void GetRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.GetRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string raw_transaction = 1;
  if (this->raw_transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->raw_transaction().data(), static_cast<int>(this->raw_transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetRawTransactionResponse.raw_transaction");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->raw_transaction(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.GetRawTransactionResponse)
}

::google::protobuf::uint8* GetRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.GetRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string raw_transaction = 1;
  if (this->raw_transaction().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->raw_transaction().data(), static_cast<int>(this->raw_transaction().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "core.GetRawTransactionResponse.raw_transaction");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->raw_transaction(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.GetRawTransactionResponse)
  return target;
}

size_t GetRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.GetRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string raw_transaction = 1;
  if (this->raw_transaction().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->raw_transaction());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.GetRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.GetRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.GetRawTransactionResponse)
    MergeFrom(*source);
  }
}

void GetRawTransactionResponse::MergeFrom(const GetRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.GetRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.raw_transaction().size() > 0) {

    raw_transaction_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.raw_transaction_);
  }
}

void GetRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.GetRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRawTransactionResponse::CopyFrom(const GetRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.GetRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRawTransactionResponse::IsInitialized() const {
  return true;
}

void GetRawTransactionResponse::Swap(GetRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetRawTransactionResponse::InternalSwap(GetRawTransactionResponse* other) {
  using std::swap;
  raw_transaction_.Swap(&other->raw_transaction_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetRawTransactionResponse::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SendRawTransactionResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SendRawTransactionResponse::kSuccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendRawTransactionResponse::SendRawTransactionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_blockchain_5frpc_2eproto::scc_info_SendRawTransactionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:core.SendRawTransactionResponse)
}
SendRawTransactionResponse::SendRawTransactionResponse(const SendRawTransactionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  success_ = from.success_;
  // @@protoc_insertion_point(copy_constructor:core.SendRawTransactionResponse)
}

void SendRawTransactionResponse::SharedCtor() {
  success_ = false;
}

SendRawTransactionResponse::~SendRawTransactionResponse() {
  // @@protoc_insertion_point(destructor:core.SendRawTransactionResponse)
  SharedDtor();
}

void SendRawTransactionResponse::SharedDtor() {
}

void SendRawTransactionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SendRawTransactionResponse::descriptor() {
  ::protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SendRawTransactionResponse& SendRawTransactionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_blockchain_5frpc_2eproto::scc_info_SendRawTransactionResponse.base);
  return *internal_default_instance();
}


void SendRawTransactionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:core.SendRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  success_ = false;
  _internal_metadata_.Clear();
}

bool SendRawTransactionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:core.SendRawTransactionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool success = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &success_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:core.SendRawTransactionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:core.SendRawTransactionResponse)
  return false;
#undef DO_
}

void SendRawTransactionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:core.SendRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->success(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:core.SendRawTransactionResponse)
}

::google::protobuf::uint8* SendRawTransactionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:core.SendRawTransactionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool success = 1;
  if (this->success() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->success(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:core.SendRawTransactionResponse)
  return target;
}

size_t SendRawTransactionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:core.SendRawTransactionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool success = 1;
  if (this->success() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SendRawTransactionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:core.SendRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SendRawTransactionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendRawTransactionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:core.SendRawTransactionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:core.SendRawTransactionResponse)
    MergeFrom(*source);
  }
}

void SendRawTransactionResponse::MergeFrom(const SendRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:core.SendRawTransactionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.success() != 0) {
    set_success(from.success());
  }
}

void SendRawTransactionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:core.SendRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendRawTransactionResponse::CopyFrom(const SendRawTransactionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:core.SendRawTransactionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SendRawTransactionResponse::IsInitialized() const {
  return true;
}

void SendRawTransactionResponse::Swap(SendRawTransactionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendRawTransactionResponse::InternalSwap(SendRawTransactionResponse* other) {
  using std::swap;
  swap(success_, other->success_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SendRawTransactionResponse::GetMetadata() const {
  protobuf_blockchain_5frpc_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_blockchain_5frpc_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace core
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetBlockRequest* Arena::CreateMaybeMessage< ::core::GetBlockRequest >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetBlockRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetBlockchainInfoRequest* Arena::CreateMaybeMessage< ::core::GetBlockchainInfoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetBlockchainInfoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetBlockCountRequest* Arena::CreateMaybeMessage< ::core::GetBlockCountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetBlockCountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetRawTransactionRequest* Arena::CreateMaybeMessage< ::core::GetRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::SendRawTransactionRequest* Arena::CreateMaybeMessage< ::core::SendRawTransactionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::core::SendRawTransactionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetBlockResponse* Arena::CreateMaybeMessage< ::core::GetBlockResponse >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetBlockResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetBlockchainInfoResponse* Arena::CreateMaybeMessage< ::core::GetBlockchainInfoResponse >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetBlockchainInfoResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetBlockCountResponse* Arena::CreateMaybeMessage< ::core::GetBlockCountResponse >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetBlockCountResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::GetRawTransactionResponse* Arena::CreateMaybeMessage< ::core::GetRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::core::GetRawTransactionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::core::SendRawTransactionResponse* Arena::CreateMaybeMessage< ::core::SendRawTransactionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::core::SendRawTransactionResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
